{
  "name": "runo-bridge",
  "version": "0.0.5",
  "description": "Simple Rust to NodeJS bridge",
  "main": "bin/runo-bridge.js",
  "bin": {
    "runo-bridge": "bin/runo-bridge.js"
  },
  "scripts": {
    "test": "echo \"Error: no test specified\" && exit 1",
    "build": "tsc"
  },
  "author": {
    "name": "Andrew Kondratev",
    "email": "andrew@kondratev.pro"
  },
  "keywords": [
    "Rust",
    "NodeJS"
  ],
  "license": "ISC",
  "devDependencies": {
    "retyped-node-tsd-ambient": "^1.5.3-0",
    "typescript": "^1.8.2"
  },
  "dependencies": {
    "commander": "^2.9.0"
  },
  "readme": "#RuNo bridge Simple Rust to NodeJS bridge\n\nPrototype generating C++ boilerplate NodeJS addon wrapper for simple Rust library.\n\n**Use on your own risk!**\n\nOnly `int` and `bool` and `string` as params and outputs at the moment.\n\n##usage\n\nGenerate V8 addon C++ code from Rust source source.rs `runo-bridge <source> <output>`:\n\n  runo-bridge source.rs addon.cc\n\nRuNo will look for `no-manlge` `extern \"C\"` functions and will generate NodeJS addon boilerplate for them.\n\nIt is also possible to provide library binary interface definition as a JSON:\n\n  runo-bridge my-interface.json addon.cc\n\nJSON format is:\n\n```\n{\n  \"module_name\": \"embed\",\n  \"functions\": [\n    {\n      \"name\": \"add\",\n      \"inputs\": [\n        {\n          \"name\": \"arg1\",\n          \"type\": \"c_int\"\n        },\n        {\n          \"name\": \"arg2\",\n          \"type\": \"c_int\"\n        }\n      ],\n      \"output\": \"c_int\"\n    },\n    ...\n  ]\n}\n```\n\nSee https://github.com/andruhon/runo-bridge-example for more detailed usage example\n\n\n##Motivation\n\nIt would be nice to have something simple to use with just implementing extern C method with C primitives without knowledge of V8. FFI seems to be a good option, however, unfortunately it is far to slow to call multiple functions, see: https://github.com/wtfil/rust-in-node#results\n",
  "readmeFilename": "README.md",
  "gitHead": "f6137fc20fd1844d980409e327357526a1b9400a",
  "_id": "runo-bridge@0.0.5",
  "_shasum": "0dedf8062ca3de54ec0e4318a0f585f05ca2c1c1",
  "_from": "runo-bridge@0.0.5"
}
